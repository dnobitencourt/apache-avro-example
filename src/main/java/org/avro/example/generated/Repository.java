/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.avro.example.generated;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Repository extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7819400788962043189L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Repository\",\"namespace\":\"org.avro.example.generated\",\"fields\":[{\"name\":\"id\",\"type\":\"long\",\"doc\":\"Repository ID\"},{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Repository Nanme\"},{\"name\":\"url\",\"type\":\"string\",\"doc\":\"Repository URL\"},{\"name\":\"description\",\"type\":[\"string\",\"null\"],\"default\":null},{\"name\":\"private\",\"type\":\"boolean\"},{\"name\":\"forks_count\",\"type\":[\"int\",\"null\"],\"default\":0},{\"name\":\"topics\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"owner\",\"type\":{\"type\":\"record\",\"name\":\"User\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"login\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Repository> ENCODER =
      new BinaryMessageEncoder<Repository>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Repository> DECODER =
      new BinaryMessageDecoder<Repository>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Repository> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Repository> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Repository>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Repository to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Repository from a ByteBuffer. */
  public static Repository fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Repository ID */
  @Deprecated public long id;
  /** Repository Nanme */
  @Deprecated public java.lang.CharSequence name;
  /** Repository URL */
  @Deprecated public java.lang.CharSequence url;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public boolean private$;
  @Deprecated public java.lang.Integer forks_count;
  @Deprecated public java.util.List<java.lang.CharSequence> topics;
  @Deprecated public org.avro.example.generated.User owner;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Repository() {}

  /**
   * All-args constructor.
   * @param id Repository ID
   * @param name Repository Nanme
   * @param url Repository URL
   * @param description The new value for description
   * @param private$ The new value for private
   * @param forks_count The new value for forks_count
   * @param topics The new value for topics
   * @param owner The new value for owner
   */
  public Repository(java.lang.Long id, java.lang.CharSequence name, java.lang.CharSequence url, java.lang.CharSequence description, java.lang.Boolean private$, java.lang.Integer forks_count, java.util.List<java.lang.CharSequence> topics, org.avro.example.generated.User owner) {
    this.id = id;
    this.name = name;
    this.url = url;
    this.description = description;
    this.private$ = private$;
    this.forks_count = forks_count;
    this.topics = topics;
    this.owner = owner;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return url;
    case 3: return description;
    case 4: return private$;
    case 5: return forks_count;
    case 6: return topics;
    case 7: return owner;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: url = (java.lang.CharSequence)value$; break;
    case 3: description = (java.lang.CharSequence)value$; break;
    case 4: private$ = (java.lang.Boolean)value$; break;
    case 5: forks_count = (java.lang.Integer)value$; break;
    case 6: topics = (java.util.List<java.lang.CharSequence>)value$; break;
    case 7: owner = (org.avro.example.generated.User)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return Repository ID
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * Repository ID
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return Repository Nanme
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Repository Nanme
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return Repository URL
   */
  public java.lang.CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * Repository URL
   * @param value the value to set.
   */
  public void setUrl(java.lang.CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'private$' field.
   * @return The value of the 'private$' field.
   */
  public java.lang.Boolean getPrivate$() {
    return private$;
  }

  /**
   * Sets the value of the 'private$' field.
   * @param value the value to set.
   */
  public void setPrivate$(java.lang.Boolean value) {
    this.private$ = value;
  }

  /**
   * Gets the value of the 'forks_count' field.
   * @return The value of the 'forks_count' field.
   */
  public java.lang.Integer getForksCount() {
    return forks_count;
  }

  /**
   * Sets the value of the 'forks_count' field.
   * @param value the value to set.
   */
  public void setForksCount(java.lang.Integer value) {
    this.forks_count = value;
  }

  /**
   * Gets the value of the 'topics' field.
   * @return The value of the 'topics' field.
   */
  public java.util.List<java.lang.CharSequence> getTopics() {
    return topics;
  }

  /**
   * Sets the value of the 'topics' field.
   * @param value the value to set.
   */
  public void setTopics(java.util.List<java.lang.CharSequence> value) {
    this.topics = value;
  }

  /**
   * Gets the value of the 'owner' field.
   * @return The value of the 'owner' field.
   */
  public org.avro.example.generated.User getOwner() {
    return owner;
  }

  /**
   * Sets the value of the 'owner' field.
   * @param value the value to set.
   */
  public void setOwner(org.avro.example.generated.User value) {
    this.owner = value;
  }

  /**
   * Creates a new Repository RecordBuilder.
   * @return A new Repository RecordBuilder
   */
  public static org.avro.example.generated.Repository.Builder newBuilder() {
    return new org.avro.example.generated.Repository.Builder();
  }

  /**
   * Creates a new Repository RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Repository RecordBuilder
   */
  public static org.avro.example.generated.Repository.Builder newBuilder(org.avro.example.generated.Repository.Builder other) {
    return new org.avro.example.generated.Repository.Builder(other);
  }

  /**
   * Creates a new Repository RecordBuilder by copying an existing Repository instance.
   * @param other The existing instance to copy.
   * @return A new Repository RecordBuilder
   */
  public static org.avro.example.generated.Repository.Builder newBuilder(org.avro.example.generated.Repository other) {
    return new org.avro.example.generated.Repository.Builder(other);
  }

  /**
   * RecordBuilder for Repository instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Repository>
    implements org.apache.avro.data.RecordBuilder<Repository> {

    /** Repository ID */
    private long id;
    /** Repository Nanme */
    private java.lang.CharSequence name;
    /** Repository URL */
    private java.lang.CharSequence url;
    private java.lang.CharSequence description;
    private boolean private$;
    private java.lang.Integer forks_count;
    private java.util.List<java.lang.CharSequence> topics;
    private org.avro.example.generated.User owner;
    private org.avro.example.generated.User.Builder ownerBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.avro.example.generated.Repository.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.url)) {
        this.url = data().deepCopy(fields()[2].schema(), other.url);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.private$)) {
        this.private$ = data().deepCopy(fields()[4].schema(), other.private$);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.forks_count)) {
        this.forks_count = data().deepCopy(fields()[5].schema(), other.forks_count);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.topics)) {
        this.topics = data().deepCopy(fields()[6].schema(), other.topics);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.owner)) {
        this.owner = data().deepCopy(fields()[7].schema(), other.owner);
        fieldSetFlags()[7] = true;
      }
      if (other.hasOwnerBuilder()) {
        this.ownerBuilder = org.avro.example.generated.User.newBuilder(other.getOwnerBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Repository instance
     * @param other The existing instance to copy.
     */
    private Builder(org.avro.example.generated.Repository other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.url)) {
        this.url = data().deepCopy(fields()[2].schema(), other.url);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.private$)) {
        this.private$ = data().deepCopy(fields()[4].schema(), other.private$);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.forks_count)) {
        this.forks_count = data().deepCopy(fields()[5].schema(), other.forks_count);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.topics)) {
        this.topics = data().deepCopy(fields()[6].schema(), other.topics);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.owner)) {
        this.owner = data().deepCopy(fields()[7].schema(), other.owner);
        fieldSetFlags()[7] = true;
      }
      this.ownerBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * Repository ID
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * Repository ID
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * Repository ID
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * Repository ID
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * Repository Nanme
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * Repository Nanme
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * Repository Nanme
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * Repository Nanme
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * Repository URL
      * @return The value.
      */
    public java.lang.CharSequence getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * Repository URL
      * @param value The value of 'url'.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder setUrl(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.url = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * Repository URL
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'url' field.
      * Repository URL
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder clearUrl() {
      url = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'private$' field.
      * @return The value.
      */
    public java.lang.Boolean getPrivate$() {
      return private$;
    }

    /**
      * Sets the value of the 'private$' field.
      * @param value The value of 'private$'.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder setPrivate$(boolean value) {
      validate(fields()[4], value);
      this.private$ = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'private$' field has been set.
      * @return True if the 'private$' field has been set, false otherwise.
      */
    public boolean hasPrivate$() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'private$' field.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder clearPrivate$() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'forks_count' field.
      * @return The value.
      */
    public java.lang.Integer getForksCount() {
      return forks_count;
    }

    /**
      * Sets the value of the 'forks_count' field.
      * @param value The value of 'forks_count'.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder setForksCount(java.lang.Integer value) {
      validate(fields()[5], value);
      this.forks_count = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'forks_count' field has been set.
      * @return True if the 'forks_count' field has been set, false otherwise.
      */
    public boolean hasForksCount() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'forks_count' field.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder clearForksCount() {
      forks_count = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'topics' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getTopics() {
      return topics;
    }

    /**
      * Sets the value of the 'topics' field.
      * @param value The value of 'topics'.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder setTopics(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[6], value);
      this.topics = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'topics' field has been set.
      * @return True if the 'topics' field has been set, false otherwise.
      */
    public boolean hasTopics() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'topics' field.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder clearTopics() {
      topics = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'owner' field.
      * @return The value.
      */
    public org.avro.example.generated.User getOwner() {
      return owner;
    }

    /**
      * Sets the value of the 'owner' field.
      * @param value The value of 'owner'.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder setOwner(org.avro.example.generated.User value) {
      validate(fields()[7], value);
      this.ownerBuilder = null;
      this.owner = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'owner' field has been set.
      * @return True if the 'owner' field has been set, false otherwise.
      */
    public boolean hasOwner() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'owner' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.avro.example.generated.User.Builder getOwnerBuilder() {
      if (ownerBuilder == null) {
        if (hasOwner()) {
          setOwnerBuilder(org.avro.example.generated.User.newBuilder(owner));
        } else {
          setOwnerBuilder(org.avro.example.generated.User.newBuilder());
        }
      }
      return ownerBuilder;
    }

    /**
     * Sets the Builder instance for the 'owner' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public org.avro.example.generated.Repository.Builder setOwnerBuilder(org.avro.example.generated.User.Builder value) {
      clearOwner();
      ownerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'owner' field has an active Builder instance
     * @return True if the 'owner' field has an active Builder instance
     */
    public boolean hasOwnerBuilder() {
      return ownerBuilder != null;
    }

    /**
      * Clears the value of the 'owner' field.
      * @return This builder.
      */
    public org.avro.example.generated.Repository.Builder clearOwner() {
      owner = null;
      ownerBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Repository build() {
      try {
        Repository record = new Repository();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.url = fieldSetFlags()[2] ? this.url : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.private$ = fieldSetFlags()[4] ? this.private$ : (java.lang.Boolean) defaultValue(fields()[4]);
        record.forks_count = fieldSetFlags()[5] ? this.forks_count : (java.lang.Integer) defaultValue(fields()[5]);
        record.topics = fieldSetFlags()[6] ? this.topics : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[6]);
        if (ownerBuilder != null) {
          record.owner = this.ownerBuilder.build();
        } else {
          record.owner = fieldSetFlags()[7] ? this.owner : (org.avro.example.generated.User) defaultValue(fields()[7]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Repository>
    WRITER$ = (org.apache.avro.io.DatumWriter<Repository>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Repository>
    READER$ = (org.apache.avro.io.DatumReader<Repository>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
